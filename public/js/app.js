!function(I){var c={};function n(i){if(c[i])return c[i].exports;var e=c[i]={i:i,l:!1,exports:{}};return I[i].call(e.exports,e,e.exports,n),e.l=!0,e.exports}n.m=I,n.c=c,n.d=function(I,c,i){n.o(I,c)||Object.defineProperty(I,c,{enumerable:!0,get:i})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(I,c){if(1&c&&(I=n(I)),8&c)return I;if(4&c&&"object"==typeof I&&I&&I.__esModule)return I;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:I}),2&c&&"string"!=typeof I)for(var e in I)n.d(i,e,function(c){return I[c]}.bind(null,e));return i},n.n=function(I){var c=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(c,"a",c),c},n.o=function(I,c){return Object.prototype.hasOwnProperty.call(I,c)},n.p="./",n(n.s=0)}([function(I,c,n){n(2),I.exports=n(1)},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zY3NzL3N0eWxlLnNjc3M/MWU1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/EventEmitter.js\nclass EventEmitter {\r\n    constructor() {\r\n      this._events = {};\r\n    }\r\n    on(evt, listener) {\r\n      (this._events[evt] || (this._events[evt] = [])).push(listener);\r\n      return this;\r\n    }\r\n    emit(evt, arg) {\r\n      (this._events[evt] || []).slice().forEach(lsn => lsn(arg));\r\n    }\r\n  }\r\n\r\n  \n// CONCATENATED MODULE: ./src/js/models/InputMaskModel.js\n\r\n\r\nclass InputMaskModel_InputMaskModel extends EventEmitter {\r\n    constructor(state) {\r\n        super();\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    getValue(){\r\n        return this.state;\r\n    }\r\n\r\n    setValue(mask, value){\r\n        const literalPattern = /[0\\*]/;\r\n        const numberPattern = /[0-9]/;\r\n        let newValue = "";\r\n        try {\r\n            let maskLength = mask.length;\r\n            let valueIndex = 0;\r\n            let maskIndex = 0;\r\n        \r\n            for (; maskIndex < maskLength;) {\r\n              if (maskIndex >= value.length) break;\r\n        \r\n              if (mask[maskIndex] === "0" && value[valueIndex].match(numberPattern) === null) break;\r\n        \r\n              while (mask[maskIndex].match(literalPattern) === null) {\r\n                if (value[valueIndex] === mask[maskIndex]) break;\r\n                newValue += mask[maskIndex++];\r\n              }\r\n              newValue += value[valueIndex++];\r\n              maskIndex++;\r\n            }\r\n        \r\n            this.state = newValue;\r\n\r\n            return newValue;\r\n          } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ var models_InputMaskModel = (InputMaskModel_InputMaskModel);\n// CONCATENATED MODULE: ./src/js/data/countryList.js\nconst countryList = [{code: "AF", code3: "AFG", name: "Afghanistan", number: "004"},\r\n{code: "AL", code3: "ALB", name: "Albania", number: "008"},\r\n{code: "DZ", code3: "DZA", name: "Algeria", number: "012"},\r\n{code: "AS", code3: "ASM", name: "American Samoa", number: "016"},\r\n{code: "AD", code3: "AND", name: "Andorra", number: "020"},\r\n{code: "AO", code3: "AGO", name: "Angola", number: "024"},\r\n{code: "AI", code3: "AIA", name: "Anguilla", number: "660"},\r\n{code: "AQ", code3: "ATA", name: "Antarctica", number: "010"},\r\n{code: "AG", code3: "ATG", name: "Antigua and Barbuda", number: "028"},\r\n{code: "AR", code3: "ARG", name: "Argentina", number: "032"},\r\n{code: "AM", code3: "ARM", name: "Armenia", number: "051"},\r\n{code: "AW", code3: "ABW", name: "Aruba", number: "533"},\r\n{code: "AU", code3: "AUS", name: "Australia", number: "036"},\r\n{code: "AT", code3: "AUT", name: "Austria", number: "040"},\r\n{code: "AZ", code3: "AZE", name: "Azerbaijan", number: "031"},\r\n{code: "BS", code3: "BHS", name: "Bahamas", number: "044"},\r\n{code: "BH", code3: "BHR", name: "Bahrain", number: "048"},\r\n{code: "BD", code3: "BGD", name: "Bangladesh", number: "050"},\r\n{code: "BB", code3: "BRB", name: "Barbados", number: "052"},\r\n{code: "BY", code3: "BLR", name: "Belarus", number: "112"},\r\n{code: "BE", code3: "BEL", name: "Belgium", number: "056"},\r\n{code: "BZ", code3: "BLZ", name: "Belize", number: "084"},\r\n{code: "BJ", code3: "BEN", name: "Benin", number: "204"},\r\n{code: "BM", code3: "BMU", name: "Bermuda", number: "060"},\r\n{code: "BT", code3: "BTN", name: "Bhutan", number: "064"},\r\n{code: "BO", code3: "BOL", name: "Bolivia (Plurinational State of)", number: "068"},\r\n{code: "BQ", code3: "BES", name: "Bonaire, Sint Eustatius and Saba", number: "535"},\r\n{code: "BA", code3: "BIH", name: "Bosnia and Herzegovina", number: "070"},\r\n{code: "BW", code3: "BWA", name: "Botswana", number: "072"},\r\n{code: "BV", code3: "BVT", name: "Bouvet Island", number: "074"},\r\n{code: "BR", code3: "BRA", name: "Brazil", number: "076"},\r\n{code: "IO", code3: "IOT", name: "British Indian Ocean Territory", number: "086"},\r\n{code: "BN", code3: "BRN", name: "Brunei Darussalam", number: "096"},\r\n{code: "BG", code3: "BGR", name: "Bulgaria", number: "100"},\r\n{code: "BF", code3: "BFA", name: "Burkina Faso", number: "854"},\r\n{code: "BI", code3: "BDI", name: "Burundi", number: "108"},\r\n{code: "CV", code3: "CPV", name: "Cabo Verde", number: "132"},\r\n{code: "KH", code3: "KHM", name: "Cambodia", number: "116"},\r\n{code: "CM", code3: "CMR", name: "Cameroon", number: "120"},\r\n{code: "CA", code3: "CAN", name: "Canada", number: "124"},\r\n{code: "KY", code3: "CYM", name: "Cayman Islands", number: "136"},\r\n{code: "CF", code3: "CAF", name: "Central African Republic", number: "140"},\r\n{code: "TD", code3: "TCD", name: "Chad", number: "148"},\r\n{code: "CL", code3: "CHL", name: "Chile", number: "152"},\r\n{code: "CN", code3: "CHN", name: "China", number: "156"},\r\n{code: "CX", code3: "CXR", name: "Christmas Island", number: "162"},\r\n{code: "CC", code3: "CCK", name: "Cocos (Keeling) Islands", number: "166"},\r\n{code: "CO", code3: "COL", name: "Colombia", number: "170"},\r\n{code: "KM", code3: "COM", name: "Comoros", number: "174"},\r\n{code: "CD", code3: "COD", name: "Congo (the Democratic Republic of the)", number: "180"},\r\n{code: "CG", code3: "COG", name: "Congo", number: "178"},\r\n{code: "CK", code3: "COK", name: "Cook Islands", number: "184"},\r\n{code: "CR", code3: "CRI", name: "Costa Rica", number: "188"},\r\n{code: "HR", code3: "HRV", name: "Croatia", number: "191"},\r\n{code: "CU", code3: "CUB", name: "Cuba", number: "192"},\r\n{code: "CW", code3: "CUW", name: "Curaçao", number: "531"},\r\n{code: "CY", code3: "CYP", name: "Cyprus", number: "196"},\r\n{code: "CZ", code3: "CZE", name: "Czechia", number: "203"},\r\n{code: "CI", code3: "CIV", name: "Côte d\'Ivoire", number: "384"},\r\n{code: "DK", code3: "DNK", name: "Denmark", number: "208"},\r\n{code: "DJ", code3: "DJI", name: "Djibouti", number: "262"},\r\n{code: "DM", code3: "DMA", name: "Dominica", number: "212"},\r\n{code: "DO", code3: "DOM", name: "Dominican Republic", number: "214"},\r\n{code: "EC", code3: "ECU", name: "Ecuador", number: "218"},\r\n{code: "EG", code3: "EGY", name: "Egypt", number: "818"},\r\n{code: "SV", code3: "SLV", name: "El Salvador", number: "222"},\r\n{code: "GQ", code3: "GNQ", name: "Equatorial Guinea", number: "226"},\r\n{code: "ER", code3: "ERI", name: "Eritrea", number: "232"},\r\n{code: "EE", code3: "EST", name: "Estonia", number: "233"},\r\n{code: "SZ", code3: "SWZ", name: "Eswatini", number: "748"},\r\n{code: "ET", code3: "ETH", name: "Ethiopia", number: "231"},\r\n{code: "FK", code3: "FLK", name: "Falkland Islands [Malvinas]", number: "238"},\r\n{code: "FO", code3: "FRO", name: "Faroe Islands", number: "234"},\r\n{code: "FJ", code3: "FJI", name: "Fiji", number: "242"},\r\n{code: "FI", code3: "FIN", name: "Finland", number: "246"},\r\n{code: "FR", code3: "FRA", name: "France", number: "250"},\r\n{code: "GF", code3: "GUF", name: "French Guiana", number: "254"},\r\n{code: "PF", code3: "PYF", name: "French Polynesia", number: "258"},\r\n{code: "TF", code3: "ATF", name: "French Southern Territories", number: "260"},\r\n{code: "GA", code3: "GAB", name: "Gabon", number: "266"},\r\n{code: "GM", code3: "GMB", name: "Gambia", number: "270"},\r\n{code: "GE", code3: "GEO", name: "Georgia", number: "268"},\r\n{code: "DE", code3: "DEU", name: "Germany", number: "276"},\r\n{code: "GH", code3: "GHA", name: "Ghana", number: "288"},\r\n{code: "GI", code3: "GIB", name: "Gibraltar", number: "292"},\r\n{code: "GR", code3: "GRC", name: "Greece", number: "300"},\r\n{code: "GL", code3: "GRL", name: "Greenland", number: "304"},\r\n{code: "GD", code3: "GRD", name: "Grenada", number: "308"},\r\n{code: "GP", code3: "GLP", name: "Guadeloupe", number: "312"},\r\n{code: "GU", code3: "GUM", name: "Guam", number: "316"},\r\n{code: "GT", code3: "GTM", name: "Guatemala", number: "320"},\r\n{code: "GG", code3: "GGY", name: "Guernsey", number: "831"},\r\n{code: "GN", code3: "GIN", name: "Guinea", number: "324"},\r\n{code: "GW", code3: "GNB", name: "Guinea-Bissau", number: "624"},\r\n{code: "GY", code3: "GUY", name: "Guyana", number: "328"},\r\n{code: "HT", code3: "HTI", name: "Haiti", number: "332"},\r\n{code: "HM", code3: "HMD", name: "Heard Island and McDonald Islands", number: "334"},\r\n{code: "VA", code3: "VAT", name: "Holy See", number: "336"},\r\n{code: "HN", code3: "HND", name: "Honduras", number: "340"},\r\n{code: "HK", code3: "HKG", name: "Hong Kong", number: "344"},\r\n{code: "HU", code3: "HUN", name: "Hungary", number: "348"},\r\n{code: "IS", code3: "ISL", name: "Iceland", number: "352"},\r\n{code: "IN", code3: "IND", name: "India", number: "356"},\r\n{code: "ID", code3: "IDN", name: "Indonesia", number: "360"},\r\n{code: "IR", code3: "IRN", name: "Iran (Islamic Republic of)", number: "364"},\r\n{code: "IQ", code3: "IRQ", name: "Iraq", number: "368"},\r\n{code: "IE", code3: "IRL", name: "Ireland", number: "372"},\r\n{code: "IM", code3: "IMN", name: "Isle of Man", number: "833"},\r\n{code: "IL", code3: "ISR", name: "Israel", number: "376"},\r\n{code: "IT", code3: "ITA", name: "Italy", number: "380"},\r\n{code: "JM", code3: "JAM", name: "Jamaica", number: "388"},\r\n{code: "JP", code3: "JPN", name: "Japan", number: "392"},\r\n{code: "JE", code3: "JEY", name: "Jersey", number: "832"},\r\n{code: "JO", code3: "JOR", name: "Jordan", number: "400"},\r\n{code: "KZ", code3: "KAZ", name: "Kazakhstan", number: "398"},\r\n{code: "KE", code3: "KEN", name: "Kenya", number: "404"},\r\n{code: "KI", code3: "KIR", name: "Kiribati", number: "296"},\r\n{code: "KP", code3: "PRK", name: "Korea (the Democratic People\'s Republic of)", number: "408"},\r\n{code: "KR", code3: "KOR", name: "Korea (the Republic of)", number: "410"},\r\n{code: "KW", code3: "KWT", name: "Kuwait", number: "414"},\r\n{code: "KG", code3: "KGZ", name: "Kyrgyzstan", number: "417"},\r\n{code: "LA", code3: "LAO", name: "Lao People\'s Democratic Republic", number: "418"},\r\n{code: "LV", code3: "LVA", name: "Latvia", number: "428"},\r\n{code: "LB", code3: "LBN", name: "Lebanon", number: "422"},\r\n{code: "LS", code3: "LSO", name: "Lesotho", number: "426"},\r\n{code: "LR", code3: "LBR", name: "Liberia", number: "430"},\r\n{code: "LY", code3: "LBY", name: "Libya", number: "434"},\r\n{code: "LI", code3: "LIE", name: "Liechtenstein", number: "438"},\r\n{code: "LT", code3: "LTU", name: "Lithuania", number: "440"},\r\n{code: "LU", code3: "LUX", name: "Luxembourg", number: "442"},\r\n{code: "MO", code3: "MAC", name: "Macao", number: "446"},\r\n{code: "MG", code3: "MDG", name: "Madagascar", number: "450"},\r\n{code: "MW", code3: "MWI", name: "Malawi", number: "454"},\r\n{code: "MY", code3: "MYS", name: "Malaysia", number: "458"},\r\n{code: "MV", code3: "MDV", name: "Maldives", number: "462"},\r\n{code: "ML", code3: "MLI", name: "Mali", number: "466"},\r\n{code: "MT", code3: "MLT", name: "Malta", number: "470"},\r\n{code: "MH", code3: "MHL", name: "Marshall Islands", number: "584"},\r\n{code: "MQ", code3: "MTQ", name: "Martinique", number: "474"},\r\n{code: "MR", code3: "MRT", name: "Mauritania", number: "478"},\r\n{code: "MU", code3: "MUS", name: "Mauritius", number: "480"},\r\n{code: "YT", code3: "MYT", name: "Mayotte", number: "175"},\r\n{code: "MX", code3: "MEX", name: "Mexico", number: "484"},\r\n{code: "FM", code3: "FSM", name: "Micronesia (Federated States of)", number: "583"},\r\n{code: "MD", code3: "MDA", name: "Moldova (the Republic of)", number: "498"},\r\n{code: "MC", code3: "MCO", name: "Monaco", number: "492"},\r\n{code: "MN", code3: "MNG", name: "Mongolia", number: "496"},\r\n{code: "ME", code3: "MNE", name: "Montenegro", number: "499"},\r\n{code: "MS", code3: "MSR", name: "Montserrat", number: "500"},\r\n{code: "MA", code3: "MAR", name: "Morocco", number: "504"},\r\n{code: "MZ", code3: "MOZ", name: "Mozambique", number: "508"},\r\n{code: "MM", code3: "MMR", name: "Myanmar", number: "104"},\r\n{code: "NA", code3: "NAM", name: "Namibia", number: "516"},\r\n{code: "NR", code3: "NRU", name: "Nauru", number: "520"},\r\n{code: "NP", code3: "NPL", name: "Nepal", number: "524"},\r\n{code: "NL", code3: "NLD", name: "Netherlands", number: "528"},\r\n{code: "NC", code3: "NCL", name: "New Caledonia", number: "540"},\r\n{code: "NZ", code3: "NZL", name: "New Zealand", number: "554"},\r\n{code: "NI", code3: "NIC", name: "Nicaragua", number: "558"},\r\n{code: "NE", code3: "NER", name: "Niger", number: "562"},\r\n{code: "NG", code3: "NGA", name: "Nigeria", number: "566"},\r\n{code: "NU", code3: "NIU", name: "Niue", number: "570"},\r\n{code: "NF", code3: "NFK", name: "Norfolk Island", number: "574"},\r\n{code: "MP", code3: "MNP", name: "Northern Mariana Islands", number: "580"},\r\n{code: "NO", code3: "NOR", name: "Norway", number: "578"},\r\n{code: "OM", code3: "OMN", name: "Oman", number: "512"},\r\n{code: "PK", code3: "PAK", name: "Pakistan", number: "586"},\r\n{code: "PW", code3: "PLW", name: "Palau", number: "585"},\r\n{code: "PS", code3: "PSE", name: "Palestine, State of", number: "275"},\r\n{code: "PA", code3: "PAN", name: "Panama", number: "591"},\r\n{code: "PG", code3: "PNG", name: "Papua New Guinea", number: "598"},\r\n{code: "PY", code3: "PRY", name: "Paraguay", number: "600"},\r\n{code: "PE", code3: "PER", name: "Peru", number: "604"},\r\n{code: "PH", code3: "PHL", name: "Philippines", number: "608"},\r\n{code: "PN", code3: "PCN", name: "Pitcairn", number: "612"},\r\n{code: "PL", code3: "POL", name: "Poland", number: "616"},\r\n{code: "PT", code3: "PRT", name: "Portugal", number: "620"},\r\n{code: "PR", code3: "PRI", name: "Puerto Rico", number: "630"},\r\n{code: "QA", code3: "QAT", name: "Qatar", number: "634"},\r\n{code: "MK", code3: "MKD", name: "Republic of North Macedonia", number: "807"},\r\n{code: "RO", code3: "ROU", name: "Romania", number: "642"},\r\n{code: "RU", code3: "RUS", name: "Russian Federation", number: "643"},\r\n{code: "RW", code3: "RWA", name: "Rwanda", number: "646"},\r\n{code: "RE", code3: "REU", name: "Réunion", number: "638"},\r\n{code: "BL", code3: "BLM", name: "Saint Barthélemy", number: "652"},\r\n{code: "SH", code3: "SHN", name: "Saint Helena, Ascension and Tristan da Cunha", number: "654"},\r\n{code: "KN", code3: "KNA", name: "Saint Kitts and Nevis", number: "659"},\r\n{code: "LC", code3: "LCA", name: "Saint Lucia", number: "662"},\r\n{code: "MF", code3: "MAF", name: "Saint Martin (French part)", number: "663"},\r\n{code: "PM", code3: "SPM", name: "Saint Pierre and Miquelon", number: "666"},\r\n{code: "VC", code3: "VCT", name: "Saint Vincent and the Grenadines", number: "670"},\r\n{code: "WS", code3: "WSM", name: "Samoa", number: "882"},\r\n{code: "SM", code3: "SMR", name: "San Marino", number: "674"},\r\n{code: "ST", code3: "STP", name: "Sao Tome and Principe", number: "678"},\r\n{code: "SA", code3: "SAU", name: "Saudi Arabia", number: "682"},\r\n{code: "SN", code3: "SEN", name: "Senegal", number: "686"},\r\n{code: "RS", code3: "SRB", name: "Serbia", number: "688"},\r\n{code: "SC", code3: "SYC", name: "Seychelles", number: "690"},\r\n{code: "SL", code3: "SLE", name: "Sierra Leone", number: "694"},\r\n{code: "SG", code3: "SGP", name: "Singapore", number: "702"},\r\n{code: "SX", code3: "SXM", name: "Sint Maarten (Dutch part)", number: "534"},\r\n{code: "SK", code3: "SVK", name: "Slovakia", number: "703"},\r\n{code: "SI", code3: "SVN", name: "Slovenia", number: "705"},\r\n{code: "SB", code3: "SLB", name: "Solomon Islands", number: "090"},\r\n{code: "SO", code3: "SOM", name: "Somalia", number: "706"},\r\n{code: "ZA", code3: "ZAF", name: "South Africa", number: "710"},\r\n{code: "GS", code3: "SGS", name: "South Georgia and the South Sandwich Islands", number: "239"},\r\n{code: "SS", code3: "SSD", name: "South Sudan", number: "728"},\r\n{code: "ES", code3: "ESP", name: "Spain", number: "724"},\r\n{code: "LK", code3: "LKA", name: "Sri Lanka", number: "144"},\r\n{code: "SD", code3: "SDN", name: "Sudan", number: "729"},\r\n{code: "SR", code3: "SUR", name: "Suriname", number: "740"},\r\n{code: "SJ", code3: "SJM", name: "Svalbard and Jan Mayen", number: "744"},\r\n{code: "SE", code3: "SWE", name: "Sweden", number: "752"},\r\n{code: "CH", code3: "CHE", name: "Switzerland", number: "756"},\r\n{code: "SY", code3: "SYR", name: "Syrian Arab Republic", number: "760"},\r\n{code: "TW", code3: "TWN", name: "Taiwan (Province of China)", number: "158"},\r\n{code: "TJ", code3: "TJK", name: "Tajikistan", number: "762"},\r\n{code: "TZ", code3: "TZA", name: "Tanzania, United Republic of", number: "834"},\r\n{code: "TH", code3: "THA", name: "Thailand", number: "764"},\r\n{code: "TL", code3: "TLS", name: "Timor-Leste", number: "626"},\r\n{code: "TG", code3: "TGO", name: "Togo", number: "768"},\r\n{code: "TK", code3: "TKL", name: "Tokelau", number: "772"},\r\n{code: "TO", code3: "TON", name: "Tonga", number: "776"},\r\n{code: "TT", code3: "TTO", name: "Trinidad and Tobago", number: "780"},\r\n{code: "TN", code3: "TUN", name: "Tunisia", number: "788"},\r\n{code: "TR", code3: "TUR", name: "Turkey", number: "792"},\r\n{code: "TM", code3: "TKM", name: "Turkmenistan", number: "795"},\r\n{code: "TC", code3: "TCA", name: "Turks and Caicos Islands", number: "796"},\r\n{code: "TV", code3: "TUV", name: "Tuvalu", number: "798"},\r\n{code: "UG", code3: "UGA", name: "Uganda", number: "800"},\r\n{code: "UA", code3: "UKR", name: "Ukraine", number: "804"},\r\n{code: "AE", code3: "ARE", name: "United Arab Emirates", number: "784"},\r\n{code: "GB", code3: "GBR", name: "United Kingdom of Great Britain and Northern Ireland", number: "826"},\r\n{code: "UM", code3: "UMI", name: "United States Minor Outlying Islands", number: "581"},\r\n{code: "US", code3: "USA", name: "United States of America", number: "840"},\r\n{code: "UY", code3: "URY", name: "Uruguay", number: "858"},\r\n{code: "UZ", code3: "UZB", name: "Uzbekistan", number: "860"},\r\n{code: "VU", code3: "VUT", name: "Vanuatu", number: "548"},\r\n{code: "VE", code3: "VEN", name: "Venezuela (Bolivarian Republic of)", number: "862"},\r\n{code: "VN", code3: "VNM", name: "Viet Nam", number: "704"},\r\n{code: "VG", code3: "VGB", name: "Virgin Islands (British)", number: "092"},\r\n{code: "VI", code3: "VIR", name: "Virgin Islands (U.S.)", number: "850"},\r\n{code: "WF", code3: "WLF", name: "Wallis and Futuna", number: "876"},\r\n{code: "EH", code3: "ESH", name: "Western Sahara", number: "732"},\r\n{code: "YE", code3: "YEM", name: "Yemen", number: "887"},\r\n{code: "ZM", code3: "ZMB", name: "Zambia", number: "894"},\r\n{code: "ZW", code3: "ZWE", name: "Zimbabwe", number: "716"},\r\n{code: "AX", code3: "ALA", name: "Åland Islands", number: "248"}\r\n];\n// CONCATENATED MODULE: ./src/js/models/GeoAutoCompleteModel.js\n\r\n\r\n\r\nclass GeoAutoCompleteModel_GeoAutoCompleteModel extends EventEmitter {\r\n    constructor() {\r\n        super();                \r\n\r\n        this.apiKey = "AIzaSyDQINHc7XSQXgHuQWIA_pWsSK3_0Yg-aF4"\r\n        this.api = "https://maps.googleapis.com/maps/api";\r\n    }\r\n\r\n    getGeoData(lat, lng){\r\n        const xhr = new XMLHttpRequest();\r\n        let urlGeocode = `${this.api}/geocode/json?latlng=${lat},${lng}&language=en&key=${this.apiKey}`;\r\n\r\n        xhr.open(\'GET\', urlGeocode, false);\r\n        xhr.send();\r\n\r\n        let location = {};\r\n        if (xhr.status != 200) {\r\n            console.log( xhr.status + \': \' + xhr.statusText );\r\n        } \r\n        else {        \r\n            location = JSON.parse(xhr.responseText);\r\n        }\r\n        return location;\r\n    }\r\n\r\n    getCountry(){     \r\n        return countryList;\r\n    }\r\n}\r\n\r\n/* harmony default export */ var models_GeoAutoCompleteModel = (GeoAutoCompleteModel_GeoAutoCompleteModel);\n// CONCATENATED MODULE: ./src/js/views/InputMaskView.js\n\r\n\r\nclass InputMaskView_InputMaskView extends EventEmitter {\r\n    constructor() {\r\n      super();\r\n\r\n      this.input = {};\r\n      this.maskedInputs = document.querySelectorAll("[data-mask]");\r\n        for (var index = 0; index < this.maskedInputs.length; index++) {\r\n            this.maskedInputs[index].addEventListener(\'input\', this.showChanges.bind(this));\r\n        }\r\n    }\r\n  \r\n    showChanges(event) {\r\n        this.input = event.target;\r\n        const obj = { value: this.input.value,\r\n            mask: this.input.dataset.mask};\r\n\r\n      this.emit(\'changeItemMasc\', obj);\r\n    }\r\n\r\n    show(data) {\r\n        this.input.value = data;\r\n    }\r\n}\r\n\r\n/* harmony default export */ var views_InputMaskView = (InputMaskView_InputMaskView);\n// CONCATENATED MODULE: ./src/js/views/GeoAutoCompleteView.js\n\r\n\r\nclass GeoAutoCompleteView_GeoAutoCompleteView extends EventEmitter {\r\n    constructor() {\r\n      super();\r\n\r\n      this.maskedInputs = document.querySelectorAll(".geo");\r\n        for (var index = 0; index < this.maskedInputs.length; index++) {\r\n            this.maskedInputs[index].addEventListener(\'input\', this.onClickGeo.bind(this));\r\n        }\r\n    }\r\n  \r\n    onClickGeo() {\r\n        this.emit(\'autocomplete\');\r\n    }\r\n\r\n    handleGeoAutocomplete(data) {\r\n        const inputCity = document.getElementById("city");\r\n        const inputZip = document.getElementById("zip");\r\n        const options = document.querySelectorAll(\'#countries > option\');\r\n\r\n        options.forEach(function(item, i) {\r\n            if(item.value.indexOf(data.results[0].address_components[6].short_name) != -1)            \r\n                {\r\n                    item.selected = true;\r\n                }\r\n          });\r\n\r\n        inputCity.value = data.results[0].address_components[2].long_name;\r\n        inputZip.value = data.results[0].address_components[7].long_name;    \r\n    }\r\n\r\n    show(countries) {\r\n\r\n        const selector = document.getElementById(\'countries\');\r\n\r\n        countries.forEach((item) => selector.append(new Option(item.name, item.code)));\r\n\r\n    }\r\n}\r\n\r\n/* harmony default export */ var views_GeoAutoCompleteView = (GeoAutoCompleteView_GeoAutoCompleteView);\n// CONCATENATED MODULE: ./src/js/controllers/InputMaskController.js\nclass InputMaskController {\r\n    constructor(model, view) {\r\n      this._model = model;\r\n      this._view = view;\r\n\r\n      view.on(\'changeItemMasc\', this.updateInputMask.bind(this));\r\n\r\n      view.show(model.items);\r\n    }\r\n  \r\n    updateInputMask(data) {\r\n      const result = this._model.setValue(data.mask, data.value);\r\n\r\n      this._view.show(result);\r\n    }\r\n  }\r\n\r\n  /* harmony default export */ var controllers_InputMaskController = (InputMaskController);\n// CONCATENATED MODULE: ./src/js/controllers/GeoAutoCompleteController.js\nclass GeoAutoCompleteController {\r\n    constructor(model, view) {\r\n        this._model = model;\r\n        this._view = view;\r\n        \r\n        view.on(\'autocomplete\', this.initialize.bind(this));\r\n       \r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.autocomplete.bind(this), this.errorFunction);\r\n        }\r\n\r\n        this.initCountrySelector();\r\n    };\r\n\r\n    autocomplete(position) {\r\n        var lat = position.coords.latitude;\r\n        var lng = position.coords.longitude;\r\n\r\n        const result = this._model.getGeoData(lat, lng);\r\n\r\n        this._view.handleGeoAutocomplete(result);\r\n    }\r\n\r\n    initCountrySelector() {\r\n        this._view.show(this._model.getCountry());\r\n    }\r\n\r\n    errorFunction() {\r\n        console.log("Geocoder failed");\r\n    }\r\n}\r\n\r\n/* harmony default export */ var controllers_GeoAutoCompleteController = (GeoAutoCompleteController);\n// CONCATENATED MODULE: ./src/js/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// initialize InputMask\r\nconst  inputMaskModel = new models_InputMaskModel();\r\nconst  inputMaskView = new views_InputMaskView();\r\nconst  inputMaskController = new controllers_InputMaskController(inputMaskModel, inputMaskView);\r\n\r\n// initialize geoAutoComplete\r\nconst  geoAutoCompleteModel = new models_GeoAutoCompleteModel();\r\nconst  geoAutoCompleteView = new views_GeoAutoCompleteView();\r\nconst  geoAutoCompleteController = new controllers_GeoAutoCompleteController(geoAutoCompleteModel, geoAutoCompleteView);\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}]);